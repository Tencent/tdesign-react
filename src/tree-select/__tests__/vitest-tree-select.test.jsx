/* eslint-disable @typescript-eslint/no-unused-vars */
/**
 * 该文件由脚本自动生成，如需修改请联系 PMC
 * This file generated by scripts of tdesign-api. `npm run api:docs TreeSelect React(PC) vitest,finalProject`
 * If you need to modify this file, contact PMC first please.
 */
import React from 'react';
import {
  fireEvent,
  vi,
  render,
  mockDelay,
  simulateInputChange,
  simulateDocumentMouseEvent,
  simulateInputEnter,
} from '@test/utils';
import { TreeSelect } from '..';
import { getTreeSelectDefaultMount, getTreeSelectMultipleMount } from './mount';

describe('TreeSelect Component', () => {
  it('events.blur: single select blur works fine', async () => {
    const onFocusFn = vi.fn();
    const onBlurFn1 = vi.fn();
    const { container } = getTreeSelectDefaultMount(
      TreeSelect,
      { filterable: true, value: 1 },
      { onFocus: onFocusFn, onBlur: onBlurFn1 },
    );
    fireEvent.click(container.querySelector('.t-input'));
    await mockDelay(100);
    expect(onFocusFn).toHaveBeenCalled();
    expect(onFocusFn.mock.calls[0][0].e.type).toBe('focus');
    expect(onFocusFn.mock.calls[0][0].value).toBe(1);
    simulateDocumentMouseEvent(document, 'mousedown');
    expect(onBlurFn1).toHaveBeenCalled();
    expect(onBlurFn1.mock.calls[0][0].e.type).toBe('mousedown');
    expect(onBlurFn1.mock.calls[0][0].value).toBe(1);
  });
});
