/* eslint-disable @typescript-eslint/no-unused-vars */
/**
 * 该文件由脚本自动生成，如需修改请联系 PMC
 * This file generated by scripts of tdesign-api. `npm run api:docs BackTop React(PC) vitest,finalProject`
 * If you need to modify this file, contact PMC first please.
 */
import React from 'react';
import { fireEvent, vi, render } from '@test/utils';
import { BackTop } from '..';

describe('BackTop Component', () => {
  it('props.children works fine', () => {
    const { container } = render(
      <BackTop>
        <span className="custom-node">TNode</span>
      </BackTop>,
    );
    expect(container.querySelector('.custom-node')).toBeTruthy();
    expect(container).toMatchSnapshot();
  });

  it('props.content works fine', () => {
    const { container } = render(<BackTop content={<span className="custom-node">TNode</span>}></BackTop>);
    expect(container.querySelector('.custom-node')).toBeTruthy();
    expect(container).toMatchSnapshot();
  });

  it('props.default works fine', () => {
    const { container } = render(<BackTop default={<span className="custom-node">TNode</span>}></BackTop>);
    expect(container.querySelector('.custom-node')).toBeTruthy();
    expect(container).toMatchSnapshot();
  });

  ['circle', 'square'].forEach((item) => {
    it(`props.shape is equal to ${item}`, () => {
      const { container } = render(<BackTop shape={item}></BackTop>);
      expect(container.firstChild).toHaveClass(`t-back-top--${item}`);
      expect(container).toMatchSnapshot();
    });
  });

  const sizeClassNameList = ['t-size-m', 't-size-s'];
  ['medium', 'small'].forEach((item, index) => {
    it(`props.size is equal to ${item}`, () => {
      const { container } = render(<BackTop size={item}>BackTop</BackTop>);
      expect(container.firstChild).toHaveClass(sizeClassNameList[index]);
      expect(container).toMatchSnapshot();
    });
  });

  ['light', 'primary', 'dark'].forEach((item) => {
    it(`props.theme is equal to ${item}`, () => {
      const { container } = render(<BackTop theme={item}>Text</BackTop>);
      expect(container.firstChild).toHaveClass(`t-back-top--theme-${item}`);
      expect(container).toMatchSnapshot();
    });
  });

  it('events.click works fine', () => {
    const fn = vi.fn();
    const { container } = render(<BackTop onClick={fn}></BackTop>);
    fireEvent.click(container.firstChild);
    expect(fn).toHaveBeenCalled();
    expect(fn.mock.calls[0][0].e.stopPropagation).toBeTruthy();
    expect(fn.mock.calls[0][0].e.type).toBe('click');
  });
});
